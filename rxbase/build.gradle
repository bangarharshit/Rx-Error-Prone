buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath deps.build.gradlePlugins.android
        classpath deps.build.gradlePlugins.errorprone
    }
}

plugins {
    id "net.ltgt.errorprone" version "0.0.13"
    id "com.github.johnrengelman.shadow" version "2.0.1"
    id "com.github.johnrengelman.plugin-shadow" version "2.0.0"
    id "java"
}

configurations.maybeCreate("epJavac")

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

test {
    testLogging.showStandardStreams = true
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

dependencies {
    compileOnly deps.apt.autoValue
    compileOnly deps.apt.autoService
    compile deps.build.errorProneCore
    compile deps.external.rxjava
    compile deps.external.rxjava2
    errorprone "com.google.errorprone:error_prone_core:2.1.1"

    compileOnly deps.apt.autoService
    compileOnly "com.google.code.findbugs:jsr305:3.0.2"

    testCompile deps.test.junit
    testCompile(deps.build.errorProneTestHelpers) {
        exclude group: "junit", module: "junit"
    }
}

shadowJar {
    classifier = null
}
build.dependsOn shadowJar

javadoc {
    failOnError = false
}

compileJava {
    options.compilerArgs += ["-Xlint:unchecked", "-Werror"]
}

test {
    maxHeapSize = "1024m"
    jvmArgs "-Xbootclasspath/p:${configurations.epJavac.asPath}"
}

apply from: rootProject.file("gradle/gradle-mvn-push.gradle")

def configurePomForShadow(pom) {
    pom.scopeMappings.mappings.remove(project.configurations.compile)
    pom.scopeMappings.mappings.remove(project.configurations.runtime)
    pom.scopeMappings.addMapping(MavenPlugin.COMPILE_PRIORITY, project.configurations.shadow, Conf2ScopeMappingContainer.COMPILE)
}

install {
    repositories.mavenInstaller {
        configurePomForShadow(pom)
    }
}
install.dependsOn shadowJar

uploadArchives {
    repositories.mavenDeployer {
        configurePomForShadow(pom)
    }
}
uploadArchives.dependsOn shadowJar
